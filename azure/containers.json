{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentUrlBase": {
            "type": "string",
            "metadata": {
                "description": "BAT building block URL."
            }
        },
        "commonResourceTags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "decsription": "A object containing the common tags that should be applied to all Azure resources."
            }
        },
        "serviceName": {
            "type": "string",
            "metadata": {
                "description": "The abbreviation of the service name to be used when naming a resource."
            }
        },
        "dockerHubUsername": {
            "type": "string",
            "metadata": {
                "description": "the username associated with the dockerhub account"
            }
        },
        "containerImageReference": {
            "type": "string",
            "metadata": {
                "description": "The container image to pull from the server. Should be in image:tag format."
            }
        },
        "ciClockCpus": {
            "type": "string",
            "metadata": {
                "description": "The number of CPU cores allocated to the Clock service container instance."
            }
        },
        "ciClockMemory": {
            "type": "string",
            "metadata": {
                "description": "The amount of memory (in GB) allocated to the Clock service container instance."
            }
        },
        "ciWorkerCpus": {
            "type": "string",
            "metadata": {
                "description": "The number of CPU cores allocated to the Worker service container instance."
            }
        },
        "ciWorkerMemory": {
            "type": "string",
            "metadata": {
                "description": "The amount of memory (in GB) allocated to the Worker service container instance."
            }
        },
        "authorisedHosts": {
            "type": "string",
            "metadata": {
                "description": "Comma seperated list of FQDNs authorised to access the app."
            }
        },
        "customHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The top level common domain for the service, e.g. apply-for-teacher-training.education.gov.uk."
            }
        },
        "certificateThumbprint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSL certificate thumbprint value."
            }
        },
        "containerInstanceNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The name prefix for the background worker container instances."
            }
        },
        "appServiceName": {
            "type": "string",
            "metadata": {
                "description": "Azure App Service resource name."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "metadata": {
                "description": "Azure App Serivce Plan resource name."
            }
        },
        "appEnvironmentVariables": {
            "type": "array",
            "metadata": {
                 "description": "Array of name/value objects for each environment variable required by the application"
            }
        }
    },
    "variables": {
        "appServiceRuntimeStack": "[concat('DOCKER|', parameters('containerImageReference'))]",
        "rubyAuthHosts": "[if(greater(length(parameters('customHostName')), 0), concat(parameters('authorisedHosts'), ',', parameters('customHostName')), parameters('authorisedHosts'))]",
        "environmentVariablesWeb": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"web\"}')))]",
        "environmentVariablesClk": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"clock\"}')))]",
        "environmentVariablesWkr": "[concat(parameters('appEnvironmentVariables'), array(json('{\"name\": \"SERVICE_TYPE\", \"value\": \"worker\"}')))]"
    },
    "resources": [
        {
            "name": "app-service",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'app-service-linux.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "appServiceName": {
                        "value": "[parameters('appServiceName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('appServicePlanName')]"
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[parameters('certificateThumbprint')]"
                    },
                    "runtimeStack": {
                        "value": "[variables('appServiceRuntimeStack')]"
                    },
                    "appServiceAppSettings": {
                        "value": "[json(replace(string(variables('environmentVariablesWeb')), 'secureValue', 'value'))]"
                    }
                }
            }
        },
        {
            "name": "container-instances-worker",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'container-instances.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "containerInstanceName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-wkr')]"
                    },
                    "containerName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-wkr')]"
                    },
                    "imageName": {
                        "value": "[parameters('containerImageReference')]"
                    },
                    "numberCpuCores": {
                        "value": "[parameters('ciWorkerCpus')]"
                    },
                    "memory": {
                        "value": "[parameters('ciWorkerMemory')]"
                    },
                    "command": {
                        "value": ["/bin/sh",  "-c", "bundle exec sidekiq -c 5 -C config/sidekiq.yml"]
                    },
                    "environmentVariables": {
                        "value": "[variables('environmentVariablesWkr')]"
                    }
                }
            }
        },
        {
            "name": "container-instances-clock",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(parameters('deploymentUrlBase'), 'container-instances.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "resourceTags": {
                        "value": "[parameters('commonResourceTags')]"
                    },
                    "containerInstanceName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-clk')]"
                    },
                    "containerName": {
                        "value": "[concat(parameters('containerInstanceNamePrefix'), '-clk')]"
                    },
                    "imageName": {
                        "value": "[parameters('containerImageReference')]"
                    },
                    "numberCpuCores": {
                        "value": "[parameters('ciClockCpus')]"
                    },
                    "memory": {
                        "value": "[parameters('ciClockMemory')]"
                    },
                    "command": {
                        "value": ["/bin/sh", "-c", "bundle exec clockwork config/clock.rb"]
                    },
                    "environmentVariables": {
                        "value": "[variables('environmentVariablesClk')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "appServiceIpAddresses": {
            "type": "array",
            "value": "[reference('app-service').outputs.possibleOutboundIpAddresses.value]"
        },
        "envVarsAsProvided": {
            "type": "array",
            "value": "[parameters('appEnvironmentVariables')]"
        },
        "envVarsAsChanged": {
            "type": "array",
            "value": "[json(replace(string(parameters('appEnvironmentVariables')), 'secureValue', 'value'))]"
        }
    }
}
