parameters:
  - name: azureSubscription
    type: string
  - name: resourceGroup
    type: string
  - name: containerName
    type: string

steps:
  - task: AzurePowerShell@4
    displayName: Check Memory Usage in ${{ parameters.containerName }}
    condition: and(succeeded(), eq(variables['buildCancelled'], false))
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: inlineScript
      azurePowerShellVersion: latestVersion
      inline: |
        $fromDateTime = "$(deploymentStartTime)"
        $toDateTime = Get-Date
        $container = "${{ parameters.containerName }}"
        $resourceGroup = "${{ parameters.resourceGroup }}"
        Write-Host "fromDateTime : $fromDateTime"
        Write-Host "toDateTime   : $toDateTime"

        $containerResourceId = $(Get-AzContainerGroup -ResourceGroupName $resourceGroup -Name $container).Id
        $memoryUsage = (Get-AzMetric -ResourceId $containerResourceId `
                      -TimeGrain 00:01:00 `
                      -StartTime $fromDateTime `
                      -EndTime $toDateTime `
                      -MetricName MemoryUsage 3>&1).Data

        $memoryUsage | Format-Table TimeStamp, Average -AutoSize
        $avgMemoryUsage = @{ beforeDeployment=$memoryUsage[0].Average 
                              afterDeployment=$memoryUsage[$memoryUsage.Length -1].Average }
        $avgMemoryUsage | Format-Table -AutoSize

        if($avgMemoryUsage.beforeDeployment -eq 0){
          #indicates a new deployment.
          Write-Host "memoryUsageBeforeDeployment is 0"
          exit 0
        }
        if($avgMemoryUsage.afterDeployment -eq 0){
          Write-Host "##vso[task.logissue type=error;]Memory Usage after deployment in $($container) is 0!"
          exit 1
        }
        $magnitudeChange = [Math]::Abs([Math]::Floor([Math]::Log10($avgMemoryUsage.afterDeployment)) - [Math]::Floor([Math]::Log10($avgMemoryUsage.beforeDeployment)))
        if($magnitudeChange -gt 0){
          Write-Host "##vso[task.logissue type=error;]Memory Usage change after deployment in $($container) is abnormal!"
          exit 1
        }
        exit 0
