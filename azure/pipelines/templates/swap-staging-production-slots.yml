parameters:
  - name: azureSubscription
    displayName: Azure Subscription Service Connection
    type: string
  - name: appService
    displayName: Name of the Azure App Service
    type: string
  - name: resourceGroup
    displayName: Name of the Azure Resource resourceGroup
    type: string

steps:
  - task: AzureAppServiceManage@0
    condition: and(succeeded(), eq(variables.buildCancelled, false))
    displayName: Start Staging slot in ${{ parameters.appService }}
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      Action: 'Start Azure App Service'
      WebAppName: '${{ parameters.appService }}'
      SpecifySlotOrASE: true
      ResourceGroupName: '${{ parameters.resourceGroup }}'
      Slot: 'staging'
  
  - template: health-check.yml
    parameters:
      url: ${{ format('https://{0}-staging.azurewebsites.net/check', parameters.appService) }}

  - task: AzureAppServiceManage@0
    condition: and(succeeded(), eq(variables.buildCancelled, false))
    displayName: Swap Staging slot to Production
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      Action: 'Swap Slots'
      WebAppName: '${{ parameters.appService }}'
      ResourceGroupName: '${{ parameters.resourceGroup }}'
      SourceSlot: 'staging'
  
  - template: health-check.yml
    parameters:
      url: ${{ format('https://{0}.azurewebsites.net/check', parameters.appService) }}
      waitBeforeFirstPing: false

  - task: AzureAppServiceManage@0
    condition: and(succeeded(), eq(variables.buildCancelled, false))
    displayName: Stop Staging slot in ${{ parameters.appService }}
    inputs:
      azureSubscription: '${{ parameters.azureSubscription }}'
      Action: 'Stop Azure App Service'
      WebAppName: '${{ parameters.appService }}'
      SpecifySlotOrASE: true
      ResourceGroupName: '${{ parameters.resourceGroup }}'
      Slot: 'staging'
