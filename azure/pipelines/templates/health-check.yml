parameters:
  - name: url
    type: string
    displayName: The health check URL
  - name: waitBeforeFirstPing
    type: boolean
    displayName: Boolean value indicating if script should wait for 10 seconds before the first attempt
    default: true

steps:
  - powershell: |
      $waitBeforeFirstPing = ${{ parameters.waitBeforeFirstPing }}
      if($waitBeforeFirstPing -eq $true){
        # Wait 30 seconds for slot to wake up
        Start-Sleep -Seconds 10
      }
      $healthCheckUrl = "${{ parameters.url }}"
      $maxAttempts = 5;
      $statusCode = 0;
      $attempt=0
      while($attempt -lt $maxAttempts){
        $attempt = $attempt + 1
        try
        {
            $response = Invoke-WebRequest -Uri $healthCheckUrl -TimeoutSec 120 -ErrorAction Stop
            $statusCode = $response.StatusCode
            break;
        }
        catch
        {
            $statusCode = $_.Exception.Response.StatusCode.value__
            $waitSeconds = $attempt * 10
            Write-Warning "Retrying GET $healthCheckUrl in $waitSeconds seconds..."
            Start-Sleep -Seconds $waitSeconds
        }
      }

      if($statusCode -ne 200){
        Write-Warning "GET $healthCheckUrl failed with status code $statusCode; after $attempt attempts"
        Write-Host "##vso[task.logissue type=error;]GET $healthCheckUrl failed with status code $statusCode"
        exit 1
      }
      else{ 
        Write-Host "GET $healthCheckUrl succeeded after $attempt attempt(s)"
        exit 0
      }
    displayName: Health check - GET ${{ parameters.url }}