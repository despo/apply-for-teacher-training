openapi: 3.0.0
info:
  version: "v1"
  title: Apply API
  contact:
    name: DfE
    email: becomingateacher@digital.education.gov.uk
  description: API for DfE's Apply for postgraduate teacher training service
servers:
  - description: Sandbox (test environment for vendors)
    url: https://sandbox.apply-for-teacher-training.education.gov.uk/api/v1
  - description: Production
    url: https://www.apply-for-teacher-training.education.gov.uk/api/v1
paths:
  /applications:
    get:
      tags:
        - Application management
      summary: Get many applications
      description: |
        This endpoint can be used to retrieve applications for the authenticating
        provider. Applications are returned with the most recently updated ones first.

        Use the `since` parameter to limit the number of results. This is intended
        to make it possible to check for new or updated applications regularly.
      parameters:
        - name: since
          description: Include only applications changed or created on or since a date and time. Times should be in ISO 8601 format.
          in: query
          required: true
          example: "2019-12-06T12:00:00Z"
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: An array of applications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleApplicationsResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/ParameterMissing"
  "/applications/{application_id}":
    get:
      tags:
        - Application management
      summary: Get a single application
      parameters:
        - $ref: "#/components/parameters/application_id"
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/offer":
    post:
      tags:
        - Application management
      summary: Make an offer
      description: Make an offer
      parameters:
        - $ref: '#/components/parameters/application_id'
      requestBody:
        description: |
          The conditions of the offer

          Providing a request body with an array of conditions is equivalent to making a **conditional** offer. For an **unconditional** offer, provide an empty array.

          You can provide an optional `course` object if you wish to suggest a different course code, location, or year of entry.
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: "#/components/schemas/MakeOffer"
                meta:
                  $ref: '#/components/schemas/MetaData'
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/confirm-enrolment":
    post:
      tags:
        - Application management
      summary: Confirm enrolment
      description: Confirm that the candidate has enrolled
      parameters:
        - $ref: '#/components/parameters/application_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/MetaData'
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/confirm-conditions-met":
    post:
      tags:
        - Application management
      summary: Confirm offer conditions
      description: Confirm that the candidate has met all the conditions set out in the offer
      parameters:
        - $ref: '#/components/parameters/application_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/MetaData'
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/conditions-not-met":
    post:
      tags:
        - Application management
      summary: Conditions not met
      description: The candidate has not met all the conditions set out in the offer
      parameters:
        - $ref: '#/components/parameters/application_id'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                meta:
                  $ref: '#/components/schemas/MetaData'
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/applications/{application_id}/reject":
    post:
      tags:
        - Application management
      summary: Reject application
      description: Reject the candidate's application with a reason
      parameters:
        - $ref: '#/components/parameters/application_id'
      requestBody:
        description: The reason for rejection
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/Rejection'
                meta:
                  $ref: '#/components/schemas/MetaData'
      responses:
        "200":
          description: An application
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleApplicationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          $ref: "#/components/responses/UnprocessableEntity"
  "/test-data/regenerate":
    post:
      tags:
        - Testing
      summary: Regenerate test data
      description: |
        Deletes all applications and generates 100 new applications. Only
        available on the Sandbox.
      parameters:
        - name: count
          description: How many items to generate (max 100)
          in: query
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "401":
          $ref: "#/components/responses/Unauthorized"

components:
  responses:
    OK:
      description: Successful response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OkResponse"

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotFoundResponse"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnauthorizedResponse"
    ParameterMissing:
      description: A required URL parameter was empty or missing
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ParameterMissingResponse"
    UnprocessableEntity:
      description: Returned when the request body was missing data or contained invalid data
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnprocessableEntityResponse"

  schemas:
    MultipleApplicationsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Application"
    SingleApplicationResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/Application"
    Application:
      type: object
      additionalProperties: false
      required:
        - id
        - type
        - attributes
      properties:
        id:
          type: string
          description: The unique ID of this application
          maxLength: 10
          example: 11fc0d3b2f
        type:
          type: string
          description: Type of the object, always "application"
          enum:
            - application
          example: application
        attributes:
          $ref: "#/components/schemas/ApplicationAttributes"
    ApplicationAttributes:
      type: object
      additionalProperties: false
      required:
        - candidate
        - phase
        - contact_details
        - course
        - offer
        - personal_statement
        - interview_preferences
        - qualifications
        - references
        - rejection
        - status
        - submitted_at
        - updated_at
        - reject_by_default_at
        - withdrawal
        - further_information
        - work_experience
      properties:
        status:
          type: string
          description: The status of this application
          enum:
            - awaiting_provider_decision
            - conditions_not_met
            - declined
            - enrolled
            - offer
            - pending_conditions
            - recruited
            - rejected
            - withdrawn
          example: awaiting_provider_decision
        phase:
          type: string
          description: |
            The phase of this application. In the first phase, "Apply 1", the
            candidate can choose up to 3 courses. If all of those choices are rejected,
            declined, or withdrawn, the user can go into "Apply 2". This means
            they can choose 1 course at a time.
          enum:
            - apply_1
            - apply_2
          example: apply_1
        submitted_at:
          type: string
          format: date-time
          description: Time of submission
          example: "2019-06-13T10:44:31Z"
        updated_at:
          type: string
          format: date-time
          description: Time of last change
          example: "2019-06-13T10:44:31Z"
        reject_by_default_at:
          type: string
          format: date-time
          nullable: true
          description: Time when the application is due to be rejected by default
          example: "2019-06-13T23:59:59Z"
        personal_statement:
          type: string
          maxLength: 11264  # 1000 words + 100 for our introductory text
          description: The candidate’s personal statement, combined from the "Becoming a Teacher" and "Subject Knowledge" fields in the application form
          example: "Since retiring from the Police Service in 2007..."
        interview_preferences:
          type: string
          maxLength: 2048  # 200 words
          description: The candidate’s interview preferences
          example: "I can’t come to interview on Thursdays"
        candidate:
          $ref: "#/components/schemas/Candidate"
        contact_details:
          $ref: "#/components/schemas/ContactDetails"
        course:
          $ref: "#/components/schemas/Course"
        qualifications:
          $ref: "#/components/schemas/Qualifications"
        work_experience:
          $ref: '#/components/schemas/WorkExperiences'
        references:
          type: array
          items:
            $ref: "#/components/schemas/Reference"
        offer:
          anyOf:
            - $ref: "#/components/schemas/Offer"
          nullable: true
        withdrawal:
          anyOf:
            - $ref: "#/components/schemas/Withdrawal"
          nullable: true
        rejection:
          anyOf:
            - $ref: "#/components/schemas/Rejection"
          nullable: true
        hesa_itt_data:
          $ref: "#/components/schemas/HESAITTData"
        further_information:
          type: string
          maxLength: 3072  # 300 words
          nullable: true
          description: "Other personal or professional issues relevant to the application which are not covered in the form"
          example: "I am expecting to be called for jury service in the next 12 months"
    Candidate:
      type: object
      additionalProperties: false
      required:
        - id
        - first_name
        - last_name
        - date_of_birth
        - nationality
        - uk_residency_status
        - english_main_language
        - english_language_qualifications
        - other_languages
        - disability_disclosure
      properties:
        id:
          type: string
          description: The candidate’s ID in the Apply system
          maxLength: 10
          example: "C5432"
        first_name:
          type: string
          description: The candidate’s first name
          maxLength: 60
          example: Boris
        last_name:
          type: string
          description: The candidate’s last name
          example: Brown
          maxLength: 60
        date_of_birth:
          type: string
          format: date
          description: The candidate’s date of birth
          example: "1985-02-02"
        nationality:
          type: array
          items:
            type: string
            pattern: "^[A-Z]{2}$"
            example: NL
          maxItems: 2
          description: One or more ISO 3166 country codes
        uk_residency_status:
          type: string
          maxLength: 256
          description: "The candidate’s UK residency status, e.g. Citizen"
          example: UK Citizen
        english_main_language:
          type: boolean
          description: Does this candidate have English as a main language?
          example: true
        english_language_qualifications:
          type: string
          maxLength: 2048  # 200 words
          nullable: true
          description: About this candidate's English language qualifications, if English is not their main language
          example: "I have a degree in English Language and Literature from the University of Munich"
        other_languages:
          type: string
          maxLength: 2048  # 200 words
          nullable: true
          description: Details of the candidate's fluency in other languages
          example: "I am bilingual in Finnish and English"
        disability_disclosure:
          type: string
          maxLength: 4096  # 400 words
          nullable: true
          description: Voluntary disclosure of disabliity or SEN so providers can provide appropriate support
          example: "I am dyslexic"
    ContactDetails:
      type: object
      additionalProperties: false
      required:
        - address_line1
        - address_line2
        - address_line3
        - address_line4
        - postcode
        - country
        - email
        - phone_number
      properties:
        address_line1:
          type: string
          description: The candidate’s address line 1
          maxLength: 50
          example: "45 Dialstone Lane"
        address_line2:
          type: string
          description: The candidate’s address line 2
          maxLength: 50
          example: Stockport
        address_line3:
          type: string
          description: The candidate’s address line 3
          maxLength: 50
          example: Greater Manchester
        address_line4:
          type: string
          description: The candidate’s address line 4
          maxLength: 50
          example: England
        postcode:
          type: string
          description: The candidate’s postcode
          maxLength: 8
          example: SK2 6AA
        country:
          type: string
          maxLength: 2
          description: The candidate’s country - ISO 3166 country code
          pattern: "^[A-Z]{2}$"
          example: GB
        email:
          type: string
          description: The candidate’s email address
          maxLength: 100
          example: boris.brown@example.com
        phone_number:
          type: string
          description: The candidate’s phone number
          maxLength: 50
          example: "07944386555"
    Course:
      type: object
      additionalProperties: false
      required:
        - recruitment_cycle_year
        - provider_code
        - course_code
        - site_code
        - study_mode
      properties:
        recruitment_cycle_year:
          type: integer
          description: The course’s recruitment cycle year
          example: 2020
        provider_code:
          type: string
          description: The provider’s code
          example: 2FR
          maxLength: 3
        course_code:
          type: string
          description: The course’s code
          example: 3CVK
          maxLength: 4
        site_code:
          type: string
          description: The site’s code
          example: K
          maxLength: 5
        study_mode:
          type: string
          description: Can be 'full_time' or 'part_time'
          example: full_time
          enum:
            - full_time
            - part_time
    Offer:
      type: object
      additionalProperties: false
      required:
        - conditions
        - course
      properties:
        conditions:
          type: array
          items:
            type: string
            maxLength: 255
          description: The conditions of the offer
          maxItems: 20
          example:
            - Completion of subject knowledge enhancement
            - Completion of professional skills test
        course:
          $ref: "#/components/schemas/Course"
    MakeOffer:
      type: object
      additionalProperties: false
      required:
        - conditions
      properties:
        conditions:
          type: array
          items:
            type: string
            maxLength: 255
          description: The conditions of the offer
          maxItems: 20
          example:
            - Completion of subject knowledge enhancement
            - Completion of professional skills test
        course:
          description: An optional `course` that you wish to suggest to the candidate.
          anyOf:
            - $ref: "#/components/schemas/Course"
    Qualification:
      type: object
      additionalProperties: false
      required:
        - qualification_type
        - subject
        - grade
        - award_year
        - institution_details
        - equivalency_details
        - awarding_body
      properties:
        qualification_type:
          type: string
          maxLength: 255
          description: The qualification awarded
          example: BA
        subject:
          type: string
          description: The subject studied
          maxLength: 255
          example: History and Politics
        grade:
          type: string
          maxLength: 255
          description: The grade awarded
          example: "2:1"
        award_year:
          type: string
          maxLength: 4
          description: The year the award was made
          example: "1992"
        institution_details:
          type: string
          description: Details about the institution and awarding body
          maxLength: 255
          example: University of Huddersfield
          nullable: true
        equivalency_details:
          type: string
          description: "Details of equivalency, if this qualification was awarded overseas"
          example: Equivalent to GCSE C
          maxLength: 255
          nullable: true
        awarding_body:
          type: string
          description: "Details about the qualification awarding body"
          example: University of Amsterdam
          maxLength: 255
          nullable: true
    Reference:
      type: object
      additionalProperties: false
      required:
        - name
        - email
        - relationship
        - reference
      properties:
        name:
          type: string
          description: The referee’s name
          maxLength: 200
          example: Julia Wild
        email:
          type: string
          description: The referee’s email
          maxLength: 100
          example: julia@example.com
        relationship:
          type: string
          description: The referee’s relationship to the candidate
          maxLength: 512  # 0.5k — 50 words
          example: Julia was my mentor at Cheadle Hulme High
        reference:
          type: string
          description: "The reference content provided by the referee."
          maxLength: 3072  # 3k — 300 words
          example: Boris is committed to the profession of teaching...
    Rejection:
      type: object
      additionalProperties: false
      required:
        - reason
      properties:
        reason:
          type: string
          description: The reason for rejection
          maxLength: 255
          example: Does not meet minimum GCSE requirements
    Withdrawal:
      type: object
      additionalProperties: false
      required:
        - reason
        - date
      properties:
        reason:
          type: string
          description: Optional. The candidate’s reason for withdrawing
          maxLength: 255
          nullable: true
          example: Candidate is unwell
        date:
          type: string
          format: date-time
          description: Time of the withdrawal
          example: "2019-09-18T15:33:49.216Z"
    Qualifications:
      type: object
      additionalProperties: false
      required:
        - gcses
        - degrees
        - other_qualifications
      properties:
        gcses:
          type: array
          items:
            $ref: "#/components/schemas/Qualification"
        degrees:
          type: array
          items:
            $ref: "#/components/schemas/Qualification"
        other_qualifications:
          type: array
          items:
            $ref: "#/components/schemas/Qualification"

    WorkExperiences:
      type: object
      additionalProperties: false
      required:
        - jobs
        - volunteering
      properties:
        jobs:
          type: array
          description: The candidate’s professional experience
          items:
            $ref: "#/components/schemas/WorkExperience"
        volunteering:
          type: array
          description: The candidate’s experience as a volunteer
          items:
            $ref: "#/components/schemas/WorkExperience"

    WorkExperience:
      type: object
      additionalProperties: false
      required:
        - organisation_name
        - start_date
        - end_date
        - role
        - description
        - working_with_children
        - commitment
      properties:
        organisation_name:
          type: string
          description: The organisation worked for
          maxLength: 60
          example: Cheadle Hulme High School
        start_date:
          type: string
          format: date
          description: The date the position began
          example: "2020-09-10"
        end_date:
          type: string
          format: date
          nullable: true
          description: The date the position finished, if applicable
          example: "2019-04-01"
        role:
          type: string
          description: The position held by the candidate
          maxLength: 60
          example: Whole School Literacy Specialist
        description:
          type: string
          description: A written description of the work involved
          maxLength: 1536  # 1.5k — 150 words
          example: "I lead, develop and enhance the literacy teaching practice of others..."
        working_with_children:
          type: boolean
          description: Did this position involve working in a school or with children?
          example: true
        commitment:
          nullable: true
          description: Whether the work was full time or part time
          type: string
          example: full_time
          enum:
            - full_time
            - part_time
    HESAITTData:
      type: object
      additionalProperties: false
      description: |
        Information required by HESA for the Initial Teacher Training data
        return. This information will only be returned once the application
        status is `enrolled`.
      required:
        - sex
        - disability
        - ethnicity
      properties:
        sex:
          type: string
          nullable: true
          description: The candidate’s sex as a [1-digit HESA code for Sex](https://www.hesa.ac.uk/collection/c19053/e/sexid)
          example: "1"
          enum:
            - "1"
            - "2"
            - "3"
        disability:
          type: string
          nullable: true
          description: The candidate’s disability as [a 2-digit HESA code for Disability](https://www.hesa.ac.uk/collection/c19053/e/disable)
          example: "00"
          enum:
            - "00"
            - "08"
            - "51"
            - "53"
            - "54"
            - "55"
            - "56"
            - "57"
            - "58"
            - "96"
        ethnicity:
          type: string
          description: The candidate’s ethnicity as [a 2-digit HESA code for Ethnicity](https://www.hesa.ac.uk/collection/c19053/e/ethnic)
          example: "10"
          enum:
            - "10"
            - "15"
            - "21"
            - "22"
            - "29"
            - "31"
            - "32"
            - "33"
            - "34"
            - "39"
            - "41"
            - "42"
            - "43"
            - "49"
            - "50"
            - "80"
            - "90"
            - "98"
    Attribution:
      type: object
      additionalProperties: false
      required:
        - full_name
        - email
        - user_id
      properties:
        full_name:
          type: string
          description: The full name of the user who made this update
          maxLength: 120
          example: "Jane Smith"
        email:
          type: string
          description: The email address of the user who made this update
          maxLength: 100
          example: "jane.smith@example.com"
        user_id:
          type: string
          description: The ID of the user in the Student Record System, used for disambiguation
          maxLength: 100
          example: "12345"
    MetaData:
      type: object
      description: Required under a "meta" key in the body of every POST or PUT request
      additionalProperties: false
      required:
        - attribution
        - timestamp
      properties:
        attribution:
          $ref: '#/components/schemas/Attribution'
        timestamp:
          type: string
          description: The time this update was made
          format: date-time
          example: "2019-03-01T15:33:49.216Z"
    Error:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Name of the current error
          example: "Unauthorized"
        message:
          type: string
          description: Description of the current error
          example: Please provide a valid authentication token
      required:
        - error
        - message
    NotFoundResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            $ref: "#/components/schemas/Error"
          example:
            - error: NotFound
              message: Unable to find Application(s)
    UnauthorizedResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            $ref: "#/components/schemas/Error"
          example:
            - error: Unauthorized
              message: Please provide a valid authentication token
    ParameterMissingResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          description: Error objects describing the problem
          items:
            $ref: "#/components/schemas/Error"
          example:
            - error: ParameterMissing
              message: "param is missing or the value is empty: parameter_name"
    UnprocessableEntityResponse:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: Error objects describing the problem
          minItems: 1
          items:
            $ref: "#/components/schemas/Error"
          example:
            - error: UnprocessableEntity
              message: "A 'meta' key was not included on the request body"
    OkResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - message
          properties:
            message:
              type: string
              example: "OK"
  parameters:
    application_id:
      name: application_id
      in: path
      required: true
      description: The unique ID of this application
      schema:
        type: string
        maxLength: 10
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
security:
  - tokenAuth: []
